@page "/v008entities/search"
@using Data.Model
@using Front.Services
@using System.ComponentModel.DataAnnotations
@inject V008EntityService V008EntityService
@rendermode InteractiveServer

<h3>Поиск</h3>

<EditForm Model="searchModel" OnValidSubmit="HandleValidSubmit" FormName="V008EntityFind">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="searchCode">Код</label>
        <InputText id="searchCode" class="form-control" @bind-Value="searchModel.Code" />
        <ValidationMessage For="@(() => searchModel.Code)" />
    </div>

    <div>
        <button type="submit" class="btn btn-primary" style="margin-top: 10px;">Поиск</button>
    </div>
</EditForm>

@if (isSearching)
{
    <p><em>Выполняется поиск...</em></p>
}
else if (entity != null)
{
    <h4>Результаты поиска:</h4>
    <div>
        <p><strong>Код:</strong> @entity.Code</p>
        <p><strong>Название:</strong> @entity.Name</p>
        <p><strong>Дата начала:</strong> @entity.BeginDate</p>
        <p><strong>Дата окончания:</strong> @entity.EndDate</p>
    </div>
}
else if (hasSearched)
{
    <p>Запись не найдена.</p>
}

@code {
    private SearchModel searchModel = new SearchModel();
    private V008Entity entity;
    private bool isSearching = false;
    private bool hasSearched = false;
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        isSearching = true;
        hasSearched = false;
        entity = null;
        errorMessage = null;

        try
        {
            if (!string.IsNullOrEmpty(searchModel.Code))
            {
                entity = await V008EntityService.GetByCodeAsync(searchModel.Code);
            }
            else
            {
                errorMessage = "Введите код для поиска.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Произошла ошибка: {ex.Message}";
        }
        finally
        {
            isSearching = false;
            hasSearched = true;
        }
    }
    public class SearchModel
    {
        [Required(ErrorMessage = "*")]
        public string? Code { get; set; }
        public static ValidationResult ValidateSearch(SearchModel model, ValidationContext context)
        {
            if (model.Code == null)
            {
                return new ValidationResult("Необходимо ввести ID или код для поиска.");
            }

            return ValidationResult.Success;
        }
    }
}
